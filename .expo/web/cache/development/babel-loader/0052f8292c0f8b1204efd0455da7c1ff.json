{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwtDecode from \"jwt-decode\";\nimport api from \"../services/api\";\nexport default function Orcamento(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      carList = _useState2[0],\n      setCarList = _useState2[1];\n\n  function getOrcamento() {\n    var token, res;\n    return _regeneratorRuntime.async(function getOrcamento$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"tokenGerado\"));\n\n          case 3:\n            token = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(api(\"/Car/mycar\", {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            }));\n\n          case 6:\n            res = _context.sent;\n            console.warn(res.data);\n            setCarList(res.data);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.warn(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  }\n\n  function deleteCar(item) {\n    var token, res;\n    return _regeneratorRuntime.async(function deleteCar$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"tokenGerado\"));\n\n          case 2:\n            token = _context2.sent;\n            res = api.delete('/Car/' + item.idCar, {\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            });\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(res);\n\n          case 6:\n            _context2.t0 = _context2.sent.status;\n\n            if (!(_context2.t0 === 200)) {\n              _context2.next = 9;\n              break;\n            }\n\n            getOrcamento();\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getOrcamento();\n  }, []);\n  return React.createElement(View, {\n    style: styles.orça_main\n  }, React.createElement(View, {\n    style: styles.orça_body\n  }, React.createElement(Text, {\n    style: (styles.Title, {\n      Color: 'black'\n    })\n  }, \"Pr\\xE9-Or\\xE7amento \"), React.createElement(View, null, listBudgets.map(function (item) {\n    return React.createElement(View, {\n      key: item.idBudget\n    }, React.createElement(Text, null, \"Modelo: \", item.model.nameModel), React.createElement(Text, null, \"Problema: \", item.service.problem), React.createElement(Text, null, \"Valor estimado: \", item.totalValue));\n  }))));\n}\nvar styles = StyleSheet.create({\n  orça_body: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Líder/Desktop/Mobile/04 . Mobile/Funilaria/screens/Orcamento.js"],"names":["React","useState","useEffect","axios","AsyncStorage","jwtDecode","api","Orcamento","navigation","carList","setCarList","getOrcamento","getItem","token","headers","res","console","warn","data","deleteCar","item","delete","idCar","status","styles","orça_main","orça_body","Title","Color","listBudgets","map","idBudget","model","nameModel","service","problem","totalValue","StyleSheet","create","flex"],"mappings":";;AAAC,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACD,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP;AAGA,eAAe,SAASC,SAAT,OAAmC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAChD,kBAA8BP,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,WAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGwBP,YAAY,CAACQ,OAAb,CAAqB,aAArB,CAHxB;;AAAA;AAGUC,YAAAA,KAHV;AAAA;AAAA,6CAKsBP,GAAG,CAAC,YAAD,EAAe;AAClCQ,cAAAA,OAAO,EAAE;AACP,iCAAiB,YAAYD;AADtB;AADyB,aAAf,CALzB;;AAAA;AAKUE,YAAAA,GALV;AAWIC,YAAAA,OAAO,CAACC,IAAR,CAAaF,GAAG,CAACG,IAAjB;AAEAR,YAAAA,UAAU,CAACK,GAAG,CAACG,IAAL,CAAV;AAbJ;AAAA;;AAAA;AAAA;AAAA;AAqBIF,YAAAA,OAAO,CAACC,IAAR;;AArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BA,WAAeE,SAAf,CAAyBC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEsBhB,YAAY,CAACQ,OAAb,CAAqB,aAArB,CAFtB;;AAAA;AAEQC,YAAAA,KAFR;AAIME,YAAAA,GAJN,GAIYT,GAAG,CAACe,MAAJ,CAAW,UAAUD,IAAI,CAACE,KAA1B,EAAiC;AACzCR,cAAAA,OAAO,EAAG;AACR,iCAAkB,YAAYD;AADtB;AAD+B,aAAjC,CAJZ;AAAA;AAAA,6CAUYE,GAVZ;;AAAA;AAAA,0CAUiBQ,MAVjB;;AAAA,mCAU4B,GAV5B;AAAA;AAAA;AAAA;;AAWMZ,YAAAA,YAAY;;AAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeAT,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAOD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC;AAApB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACG,oBAAC,IAAD;AAAM,IAAA,KAAK,GAAEF,MAAM,CAACG,KAAP,EAAe;AAAEC,MAAAA,KAAK,EAAG;AAAV,KAAjB;AAAX,4BADH,EAEG,oBAAC,IAAD,QAEOC,WAAW,CAACC,GAAZ,CAAgB,UAACV,IAAD,EAAU;AACxB,WACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACW;AAAhB,OACA,oBAAC,IAAD,oBAAiBX,IAAI,CAACY,KAAL,CAAWC,SAA5B,CADA,EAEA,oBAAC,IAAD,sBAAkBb,IAAI,CAACc,OAAL,CAAaC,OAA/B,CAFA,EAGA,oBAAC,IAAD,4BAAwBf,IAAI,CAACgB,UAA7B,CAHA,CADF;AAOD,GARD,CAFP,CAFH,CADD,CADF;AAsBC;AAAA,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAE/BZ,EAAAA,SAAS,EAAE;AACNa,IAAAA,IAAI,EAAE;AADA;AAFoB,CAAlB,CAAf","sourcesContent":[" import React ,{useState, useEffect}from \"react\";\r\n import {StyleSheet,Text, View, TextInput} from \"react-native\";\r\n import axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport api from \"../services/api\";\r\n\r\n\r\nexport default function Orcamento({ navigation }) {\r\n  const [carList, setCarList] = useState([]);\r\n\r\n  async function getOrcamento() {\r\n    //return list has been sucessfull \r\n    try {\r\n      const token = await AsyncStorage.getItem(\"tokenGerado\");\r\n\r\n      const res = await api(\"/Car/mycar\", {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token\r\n        },\r\n      });\r\n\r\n      console.warn(res.data)\r\n\r\n      setCarList(res.data);\r\n\r\n\r\n    } \r\n    \r\n    //return error for no open\r\n    catch (error) {\r\n\r\n      console.warn(error);\r\n\r\n    }\r\n  }\r\n\r\n  async function deleteCar(item){\r\n\r\n    const token = await AsyncStorage.getItem(\"tokenGerado\") \r\n\r\n  const res = api.delete('/Car/' + item.idCar, {\r\n      headers : {\r\n        'Authorization' : 'Bearer ' + token\r\n      }\r\n    })\r\n\r\n    if((await res).status === 200){\r\n        getOrcamento()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOrcamento();\r\n  }, []\r\n  );\r\n\r\n  \r\n\r\n return(\r\n   <View style={styles.orça_main}>\r\n    <View style={styles.orça_body}>\r\n       <Text style={styles.Title , { Color : 'black'} }>Pré-Orçamento </Text>\r\n       <View>\r\n            {\r\n              listBudgets.map((item) => {\r\n                return(\r\n                  <View key={item.idBudget}>\r\n                  <Text  >Modelo: {item.model.nameModel}</Text>\r\n                  <Text >Problema: {item.service.problem}</Text>\r\n                  <Text >Valor estimado: {item.totalValue}</Text>\r\n                </View>\r\n                )\r\n              })\r\n            }\r\n       </View>\r\n     </View>\r\n   </View>\r\n\r\n )\r\n\r\n }const styles = StyleSheet.create({\r\n\r\n    orça_body: {\r\n         flex: 1,\r\n       }, \r\n      \r\n })\r\n"]},"metadata":{},"sourceType":"module"}