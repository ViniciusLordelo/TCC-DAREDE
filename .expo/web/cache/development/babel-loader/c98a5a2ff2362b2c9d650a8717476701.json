{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport api from \"../services/api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwtDecode from \"jwt-decode\";\nimport { Avatar, Title, Caption, Paragraph, Drawer, TouchableRipple, Switch } from 'react-native-paper';\nimport { DrawerContentScrollView, DrawerItem } from '@react-navigation/drawer';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { Button } from \"../components/Button\";\nimport { Component } from \"react\";\nimport { AutoFocus } from \"expo-camera/build/Camera.types\";\n\nvar infoCar = function (_Component) {\n  _inherits(infoCar, _Component);\n\n  var _super = _createSuper(infoCar);\n\n  function infoCar(props) {\n    var _this;\n\n    _classCallCheck(this, infoCar);\n\n    _this = _super.call(this, props);\n\n    _this.postCar = function _callee() {\n      var token, cars, res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"tokenGerado\"));\n\n            case 2:\n              token = _context.sent;\n\n              _this.setState({\n                isLoading: true\n              });\n\n              cars = {\n                plate: _this.state.plate,\n                brand: _this.state.brand,\n                year: _this.state.year,\n                model: _this.state.model,\n                color: _this.state.color,\n                city: _this.state.city\n              };\n              console.log(cars);\n              console.log(token);\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(api.post('/Car', cars, {\n                headers: {\n                  'Authorization': 'Bearer ' + token\n                }\n              }));\n\n            case 9:\n              res = _context.sent;\n              console.log(res);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      plate: '',\n      brand: '',\n      year: '',\n      model: '',\n      color: '',\n      city: ''\n    };\n    return _this;\n  }\n\n  _createClass(infoCar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.cadastro__main\n      }, React.createElement(Drawer.Section, {\n        style: styles.cadastro__icon\n      }, React.createElement(DrawerItem, {\n        icon: function icon(_ref) {\n          var color = _ref.color,\n              size = _ref.size;\n          return React.createElement(Icon, {\n            name: \"car\",\n            color: color,\n            size: 100\n          });\n        },\n        label: \"\",\n        onPress: function onPress() {}\n      }), React.createElement(Text, {\n        style: styles.cadastro__text\n      }, \"ADICIONAR INFORMA\\xC7\\xD5ES DO CARRO\")), React.createElement(View, {\n        style: styles.form\n      }, React.createElement(View, {\n        style: styles.form2\n      }, React.createElement(TextInput, {\n        style: styles.formInput,\n        placeholder: \"Placa do carro\",\n        onChangeText: function onChangeText(plate) {\n          return _this2.setState({\n            plate: plate\n          });\n        },\n        required: true\n      })), React.createElement(View, {\n        style: styles.form2\n      }, React.createElement(TextInput, {\n        style: styles.formInput,\n        placeholder: \"Marca\",\n        onChangeText: function onChangeText(brand) {\n          return _this2.setState({\n            brand: brand\n          });\n        },\n        required: true\n      })), React.createElement(View, {\n        style: styles.form2\n      }, React.createElement(TextInput, {\n        style: styles.formInput,\n        placeholder: \"Ano do Modelo\",\n        onChangeText: function onChangeText(year) {\n          return _this2.setState({\n            year: year\n          });\n        }\n      })), React.createElement(View, {\n        style: styles.form2\n      }, React.createElement(TextInput, {\n        style: styles.formInput,\n        placeholder: \"Modelo\",\n        onChangeText: function onChangeText(model) {\n          return _this2.setState({\n            model: model\n          });\n        },\n        required: true\n      })), React.createElement(View, {\n        style: styles.form2\n      }, React.createElement(TextInput, {\n        style: styles.formInput,\n        placeholder: \"Cor\",\n        onChangeText: function onChangeText(color) {\n          return _this2.setState({\n            color: color\n          });\n        },\n        required: true\n      })), React.createElement(View, {\n        style: styles.form2\n      }, React.createElement(TextInput, {\n        style: styles.formInput,\n        placeholder: \"Munic\\xEDpio\",\n        onChangeText: function onChangeText(city) {\n          return _this2.setState({\n            city: city\n          });\n        },\n        required: true\n      }))), React.createElement(Button, {\n        onPress: this.postCar\n      }, \"ADICIONAR\"));\n    }\n  }]);\n\n  return infoCar;\n}(Component);\n\nexport { infoCar as default };\nvar styles = StyleSheet.create({\n  cadastro__body: {\n    flex: 1,\n    height: '100vh'\n  },\n  cadastro__text: {\n    margin: \"auto\",\n    alignItems: \"center\",\n    paddingRight: 64,\n    fontFamily: \"Courier\",\n    fontSize: 18\n  },\n  cadastro__text1: {\n    color: \"#33547D\"\n  },\n  cadastro__logo: {\n    height: 70,\n    resizeMode: \"contain\"\n  },\n  cadastro__main: {\n    margin: '0 auto'\n  },\n  cadastro__input: {\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n    height: 40,\n    marginBottom: 25\n  },\n  cadastro__img: {\n    height: 119\n  },\n  formField: {\n    marginBottom: 20\n  },\n  formLabel: {\n    fontSize: 18,\n    color: \"black\",\n    marginBottom: 8\n  },\n  formInput: {\n    width: 380,\n    padding: 20,\n    borderBottomWidth: 2,\n    borderColor: 'black'\n  },\n  cadastro__icon: {\n    alignItems: \"center\",\n    marginLeft: 50\n  },\n  form: {\n    padding: 50,\n    height: 100,\n    margin: '10px auto'\n  },\n  form2: {}\n});","map":{"version":3,"sources":["C:/Users/LÃ­der/Desktop/Mobile/04 . Mobile/Funilaria/screens/info-car.js"],"names":["React","useState","useEffect","api","AsyncStorage","jwtDecode","Avatar","Title","Caption","Paragraph","Drawer","TouchableRipple","Switch","DrawerContentScrollView","DrawerItem","Icon","Button","Component","AutoFocus","infoCar","props","postCar","getItem","token","setState","isLoading","cars","plate","state","brand","year","model","color","city","console","log","post","headers","res","styles","cadastro__main","cadastro__icon","size","cadastro__text","form","form2","formInput","StyleSheet","create","cadastro__body","flex","height","margin","alignItems","paddingRight","fontFamily","fontSize","cadastro__text1","cadastro__logo","resizeMode","cadastro__input","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","marginBottom","cadastro__img","formField","formLabel","padding","borderBottomWidth","borderColor","marginLeft"],"mappings":"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","sourcesContent":["//Packages\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,  \r\n  TextInput,\r\n  Animated,\r\n  SafeAreaView,\r\n \r\n} from \"react-native\";\r\n\r\n\r\n//importaÃ§Ã£o camera\\\\\r\n\r\n// import { Camera } from 'expo-camera';\r\n\r\n//Services\r\nimport api from \"../services/api\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n//importando biblioteca de icons\r\nimport {\r\n  Avatar,\r\n  Title,\r\n  Caption,\r\n  Paragraph,\r\n  Drawer,\r\n  TouchableRipple,\r\n  Switch,\r\n} from 'react-native-paper';\r\n\r\nimport {\r\n  DrawerContentScrollView,\r\n  DrawerItem\r\n} from '@react-navigation/drawer';\r\n\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n//Components\r\nimport { Button } from \"../components/Button\";\r\nimport { Component } from \"react\";\r\nimport { AutoFocus } from \"expo-camera/build/Camera.types\";\r\n\r\n\r\nexport default class infoCar extends Component {\r\n constructor(props) {\r\n  super(props);\r\n   this.state = {\r\n     plate : '',\r\n     brand : '' ,\r\n     year  : '',\r\n     model : '',\r\n     color : '',\r\n     city  : '',\r\n     \r\n   \r\n   }\r\n\r\n }\r\n\r\n\r\n\r\n// funÃ§Ã£o para cadastrar um projeto\r\n postCar = async () => {\r\n  \r\n    const token = await AsyncStorage.getItem(\"tokenGerado\");\r\n\r\n    // requisiÃ§Ã£o em andamento\r\n    this.setState({ isLoading: true });\r\n\r\n    //corpo da requisiÃ§Ã£o//\r\n    let cars = {\r\n      plate: this.state.plate,\r\n      brand: this.state.brand,\r\n      year: this.state.year,\r\n      model: this.state.model,\r\n      color: this.state.color,\r\n      city: this.state.city\r\n      \r\n      //nomerequerimento: this.state.nomerequerimento\r\n    }\r\n\r\n    //constante para armazenar o valor do token\r\n    \r\n    console.log(cars)\r\n    console.log(token)\r\n\r\n    //chamando a api para o mÃ©todo de cadastrar e o corpo da requisiÃ§Ã£o\r\n    const res = await api.post('/Car', cars, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        }\r\n    })\r\n\r\n    console.log(res)\r\n\r\n    //   // verifica a resposta da requisiÃ§Ã£o\r\n    //   .then(resposta => {\r\n\r\n    //     // caso seja 201\r\n    //     if (resposta.status === 200) {\r\n\r\n    //         // retorn message \r\n    //         console.warn('Carro cadastrado !')\r\n            \r\n\r\n    //         // request finalizada\r\n    //         this.setState({ isLoading: false })\r\n    //     }\r\n      \r\n    // })\r\n\r\n    // // caso ocorra um erro\r\n    // .catch(erro => {\r\n\r\n    //     // exibe uma mensagem \r\n    //     console.warn(erro)\r\n\r\n    //     // requisiÃ§Ã£o finalizada\r\n    //     this.setState({ isLoading: false })\r\n    // })\r\n\r\n\r\n\r\n\r\n\r\n    /////////////camera/////////////\r\n\r\n\r\n     // const [hasPermission, setHasPermission] = useState(null);\r\n  // const [type, setType] = useState(Camera.Constants.Type.back);\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const { status } = await Camera.requestPermissionsAsync();\r\n  //     setHasPermission(status === 'granted');\r\n  //   })();\r\n  // }, []);\r\n\r\n  // if (hasPermission === null) {\r\n  //   return <View />;\r\n  // }\r\n  // if (hasPermission === false) {\r\n  //   return <Text>No access to camera</Text>;\r\n\r\n\r\n  // }\r\n\r\n\r\n};\r\nrender() {\r\n\r\n  return(\r\n\r\n   \r\n\r\n \r\n      <View style={styles.cadastro__main}>\r\n\r\n      <Drawer.Section style={styles.cadastro__icon}>\r\n\r\n<DrawerItem \r\nicon={({color, size}) => (\r\n\r\n<Icon\r\nname= \"car\"\r\ncolor={color}\r\nsize={100}\r\n/>\r\n)}\r\nlabel= \"\"\r\nonPress={() => {}}\r\n/>\r\n<Text style={styles.cadastro__text}>ADICIONAR INFORMAÃÃES DO CARRO</Text>\r\n</Drawer.Section>\r\n\r\n\r\n {/* FormulÃ¡rio para o cadastro e button */}\r\n \r\n         <View style={styles.form}>\r\n            <View style={styles.form2}>\r\n          <TextInput\r\n            style={styles.formInput}\r\n            placeholder=\"Placa do carro\"\r\n            onChangeText={plate => this.setState({ plate })}\r\n            required\r\n          />\r\n       </View>\r\n\r\n\r\n       <View style={styles.form2}>\r\n          <TextInput\r\n            style={styles.formInput}\r\n            placeholder=\"Marca\"\r\n            onChangeText={brand => this.setState({ brand })}\r\n            required\r\n          />\r\n       </View>\r\n\r\n\r\n       <View style={styles.form2}>\r\n          <TextInput\r\n            style={styles.formInput}\r\n            placeholder=\"Ano do Modelo\"\r\n            onChangeText={year => this.setState({ year })}\r\n          />\r\n      </View>\r\n\r\n      <View style={styles.form2}>\r\n          <TextInput \r\n            style={styles.formInput}\r\n            placeholder=\"Modelo\"\r\n            onChangeText={model => this.setState({ model })}\r\n            required\r\n          />\r\n      </View>\r\n     \r\n\r\n     <View style={styles.form2}>\r\n\r\n          <TextInput \r\n            style={styles.formInput}\r\n            placeholder=\"Cor\"\r\n            onChangeText={color => this.setState({ color })}\r\n            required\r\n          />\r\n    </View>\r\n\r\n    <View style={styles.form2}>\r\n          <TextInput \r\n            style={styles.formInput}\r\n            placeholder=\"MunicÃ­pio\"\r\n            onChangeText={city => this.setState({ city })}\r\n            required\r\n          />\r\n\r\n          \r\n    </View>\r\n      \r\n      \r\n      {/* camera */}\r\n\r\n      {/*\r\n      <SafeAreaView >\r\n      <Camera style={{ flex: 1 }} type={type}>\r\n      </Camera>\r\n      </SafeAreaView> \r\n      */}\r\n\r\n\r\n      </View>\r\n      <Button onPress={this.postCar}>ADICIONAR</Button>\r\n      </View>\r\n   \r\n);\r\n}\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n\r\n   cadastro__body: {\r\n    flex: 1,\r\n    height: '100vh',\r\n   \r\n    \r\n  },\r\n\r\n  cadastro__text: {\r\n    margin: \"auto\",\r\n    alignItems: \"center\",\r\n    paddingRight: 64,\r\n    fontFamily: \"Courier\",\r\n    fontSize: 18,\r\n\r\n  },\r\n\r\n  cadastro__text1: {\r\n    color: \"#33547D\",\r\n  },\r\n\r\n  cadastro__logo: {\r\n    height: 70,\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  cadastro__main:{\r\n      margin : '0 auto'\r\n  },\r\n\r\n\r\n  \r\n  cadastro__input: {\r\n    shadowColor: \"black\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.22,\r\n    shadowRadius: 2.22,\r\n    elevation: 3,\r\n    height: 40,\r\n    marginBottom: 25,\r\n  },\r\n\r\n  cadastro__img: {\r\n    height: 119,\r\n  },\r\n\r\n \r\n  formField: {\r\n    marginBottom: 20,\r\n   \r\n  },\r\n\r\n  formLabel: {\r\n    fontSize: 18,\r\n    color: \"black\",\r\n    marginBottom: 8,\r\n    \r\n  },\r\n\r\n  formInput: {\r\n   \r\n    width: 380,\r\n    padding: 20,\r\n    borderBottomWidth:2,\r\n    borderColor:'black',\r\n    \r\n\r\n  },\r\n\r\n  cadastro__icon: {\r\n    alignItems: \"center\",\r\n    marginLeft: 50\r\n  },\r\n\r\n  form: {\r\n  padding: 50,\r\n  height: 100,\r\n  margin: '10px auto'\r\n  },\r\n\r\n  form2: {\r\n    \r\n    \r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}