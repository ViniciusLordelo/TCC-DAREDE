{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport axios from 'axios';\nimport { Button } from \"../components/Button\";\nimport { Avatar, Title, Caption, Paragraph, Drawer, TouchableRipple, Switch } from 'react-native-paper';\nimport { DrawerContentScrollView, DrawerItem } from '@react-navigation/drawer';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nexport default function Cadastro() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  var TypeUser = 2;\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      erroMensagem = _useState10[0],\n      setErroMensagem = _useState10[1];\n\n  function handleSubmit(_ref) {\n    var navigation;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            navigation = _ref.navigation;\n            _context.prev = 1;\n            axios.post('http://localhost:5000/api/User/create-account', {\n              name: name,\n              email: email,\n              password: password,\n              phone: phone,\n              imagePlate: \"\",\n              typeUser: TypeUser\n            }).then(function (response) {\n              if (response.status === 200) {\n                console.log('Usuário cadastrado com sucesso!');\n                navigation.navigate(\"/Login\");\n              }\n            }).catch(function () {\n              return setErroMensagem(\"Erro ao cadastrar usuário! - Tente novamente\");\n            });\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](1);\n            throw new Error(_context.t0.message);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 5]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.cadastro__body\n  }, React.createElement(View, {\n    style: styles.cadastro__main\n  }, React.createElement(Drawer.Section, {\n    style: styles.cadastro__icon\n  }, React.createElement(DrawerItem, {\n    icon: function icon(_ref2) {\n      var color = _ref2.color,\n          size = _ref2.size;\n      return React.createElement(Icon, {\n        name: \"account-plus\",\n        color: color,\n        size: 100\n      });\n    },\n    label: \"\",\n    onPress: function onPress() {}\n  }), React.createElement(Text, {\n    style: styles.cadastro__text\n  }, \"CADASTRE-SE\")), React.createElement(View, {\n    style: styles.formField\n  }, \"/>\", React.createElement(TextInput, {\n    style: styles.formInput,\n    placeholder: \"Name Full\",\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    Icon: React.createElement(Icon, {\n      name: \"check\",\n      size: 15\n    })\n  })), React.createElement(View, {\n    style: styles.formField\n  }, React.createElement(TextInput, {\n    style: styles.formInput,\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    }\n  })), React.createElement(View, {\n    style: styles.formField\n  }, React.createElement(TextInput, {\n    style: styles.formInput,\n    placeholder: \"Password\",\n    type: \"password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    }\n  })), React.createElement(View, {\n    style: styles.formField\n  }, React.createElement(TextInput, {\n    style: styles.formInput,\n    placeholder: \"Phone\",\n    onChangeText: function onChangeText(phone) {\n      return setPhone(phone);\n    }\n  })), React.createElement(Button, {\n    onPress: handleSubmit\n  }, \"CADASTRAR\")));\n}\nvar styles = StyleSheet.create({\n  cadastro__body: {\n    flex: 1\n  },\n  cadastro__text: {\n    margin: \"auto\",\n    alignItems: \"center\",\n    paddingRight: 64,\n    fontFamily: \"Courier\",\n    fontSize: 30\n  },\n  cadastro__text1: {\n    color: \"#33547D\"\n  },\n  cadastro__logo: {\n    height: 70,\n    resizeMode: \"contain\"\n  },\n  cadastro__main: {\n    padding: 20,\n    paddingLeft: 20,\n    marginTop: 60,\n    marginBottom: \"auto\"\n  },\n  cadastro__input: {\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n    height: 40,\n    marginBottom: 25\n  },\n  cadastro__img: {\n    height: 119\n  },\n  formField: {\n    marginBottom: 20\n  },\n  formLabel: {\n    fontSize: 18,\n    color: \"black\",\n    marginBottom: 8\n  },\n  formInput: {\n    height: 60,\n    paddingLeft: 20,\n    borderBottomWidth: 2,\n    borderColor: 'black'\n  },\n  cadastro__icon: {\n    alignItems: \"center\",\n    marginLeft: 50\n  },\n  Camera: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Líder/Desktop/Mobile/04 . Mobile/Funilaria/screens/Cadastro.js"],"names":["React","useState","useEffect","axios","Button","Avatar","Title","Caption","Paragraph","Drawer","TouchableRipple","Switch","DrawerContentScrollView","DrawerItem","Icon","Cadastro","email","setEmail","password","setPassword","phone","setPhone","name","setName","TypeUser","erroMensagem","setErroMensagem","handleSubmit","navigation","post","imagePlate","typeUser","then","response","status","console","log","navigate","catch","Error","message","styles","cadastro__body","cadastro__main","cadastro__icon","color","size","cadastro__text","formField","formInput","StyleSheet","create","flex","margin","alignItems","paddingRight","fontFamily","fontSize","cadastro__text1","cadastro__logo","height","resizeMode","padding","paddingLeft","marginTop","marginBottom","cadastro__input","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","cadastro__img","formLabel","borderBottomWidth","borderColor","marginLeft","Camera"],"mappings":"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","sourcesContent":["//Packages\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,  \r\n  TextInput,\r\n  Animated,\r\n  SafeAreaView,\r\n \r\n} from \"react-native\";\r\n\r\nimport axios from 'axios';\r\nimport { Button } from \"../components/Button\";\r\n\r\n\r\n//importando biblioteca de icons\r\nimport {\r\n  Avatar,\r\n  Title,\r\n  Caption,\r\n  Paragraph,\r\n  Drawer,\r\n  TouchableRipple,\r\n  Switch\r\n} from 'react-native-paper';\r\n\r\nimport {\r\n  DrawerContentScrollView,\r\n  DrawerItem\r\n} from '@react-navigation/drawer';\r\n\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n//Components\r\n\r\n\r\n\r\nexport default function Cadastro() {\r\n  \r\n\r\nconst[email, setEmail] = useState(\"\")\r\nconst[password, setPassword] = useState(\"\")\r\nconst[phone, setPhone] = useState(\"\")\r\nconst[name, setName] = useState(\"\")\r\n  \r\nconst TypeUser = 2\r\n\r\n    const[erroMensagem, setErroMensagem] = useState(\"\");\r\n\r\n\r\n\r\n    async function handleSubmit({ navigation }) {\r\n  \r\n      try {\r\n      axios.post('http://localhost:5000/api/User/create-account', {\r\n          name : name,\r\n          email : email,\r\n          password : password,\r\n          phone : phone,\r\n          imagePlate : \"\",\r\n          typeUser : TypeUser\r\n        })\r\n        \r\n        .then(response => {\r\n          if(response.status === 200){\r\n            console.log('Usuário cadastrado com sucesso!')\r\n            navigation.navigate(\"/Login\");\r\n          }\r\n        })\r\n\r\n        .catch(() => setErroMensagem(\"Erro ao cadastrar usuário! - Tente novamente\"))\r\n\r\n        } catch (error) {\r\n        throw new Error(error.message)\r\n        \r\n      }\r\n    }\r\nreturn (\r\n    <View style={styles.cadastro__body}>\r\n\r\n \r\n      <View style={styles.cadastro__main}>\r\n      <Drawer.Section style={styles.cadastro__icon}>\r\n\r\n<DrawerItem \r\nicon={({color, size}) => (\r\n\r\n<Icon\r\nname= \"account-plus\"\r\ncolor={color}\r\nsize={100}\r\n/>\r\n)}\r\nlabel= \"\"\r\nonPress={() => {}}\r\n/>\r\n\r\n<Text style={styles.cadastro__text}>CADASTRE-SE</Text>\r\n</Drawer.Section>\r\n        <View style={styles.formField}>\r\n          />\r\n          <TextInput\r\n            style={styles.formInput}\r\n            placeholder=\"Name Full\"\r\n            onChangeText={(name) => setName(name)}\r\n            Icon={\r\n            <Icon \r\n            name=\"check\"\r\n            size={15}></Icon>\r\n            }\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.formField}>\r\n          <TextInput \r\n            style={styles.formInput}\r\n            placeholder=\"Email\"\r\n            onChangeText={(email) => setEmail(email)}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.formField}>\r\n          <TextInput \r\n            style={styles.formInput}\r\n            placeholder=\"Password\"\r\n            type='password'\r\n            secureTextEntry={true}\r\n            onChangeText={(password) => setPassword(password)}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.formField}>\r\n          <TextInput \r\n            style={styles.formInput}\r\n            placeholder=\"Phone\"\r\n            onChangeText={(phone) => setPhone(phone)}\r\n          />\r\n\r\n        </View>\r\n        \r\n               <Button \r\n                onPress={handleSubmit}\r\n               >\r\n                CADASTRAR\r\n               </Button>\r\n\r\n     \r\n      </View>\r\n    </View>\r\n\r\n  );\r\n  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n\r\n   cadastro__body: {\r\n    flex: 1,\r\n  },\r\n\r\n  cadastro__text: {\r\n    margin: \"auto\",\r\n    alignItems: \"center\",\r\n    paddingRight: 64,\r\n    fontFamily: \"Courier\",\r\n    fontSize: 30,\r\n\r\n  },\r\n\r\n  cadastro__text1: {\r\n    color: \"#33547D\",\r\n  },\r\n\r\n  cadastro__logo: {\r\n    height: 70,\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  cadastro__main: {\r\n    padding: 20,\r\n    paddingLeft: 20,\r\n    marginTop: 60,\r\n    marginBottom: \"auto\",\r\n  },\r\n  \r\n  cadastro__input: {\r\n    shadowColor: \"black\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n      \r\n      \r\n    },\r\n    shadowOpacity: 0.22,\r\n    shadowRadius: 2.22,\r\n    elevation: 3,\r\n    height: 40,\r\n    marginBottom: 25,\r\n  },\r\n\r\n  cadastro__img: {\r\n    height: 119,\r\n  },\r\n\r\n \r\n  formField: {\r\n    marginBottom: 20,\r\n  },\r\n\r\n  formLabel: {\r\n    fontSize: 18,\r\n    color: \"black\",\r\n    marginBottom: 8,\r\n  },\r\n\r\n  formInput: {\r\n  \r\n    height: 60,\r\n    paddingLeft: 20,\r\n    borderBottomWidth:2,\r\n    borderColor:'black'\r\n  },\r\n\r\n  cadastro__icon: {\r\n    alignItems: \"center\",\r\n    marginLeft: 50\r\n  },\r\n  Camera: {\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n\r\n  },\r\n \r\n});"]},"metadata":{},"sourceType":"module"}