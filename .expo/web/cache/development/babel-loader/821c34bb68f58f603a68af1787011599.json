{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport jwtDecode from \"jwt-decode\";\nimport api from \"../services/api\";\nexport default function Orcamento() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listBudgets = _useState2[0],\n      setListBudgets = _useState2[1];\n\n  function getBudgets() {\n    var valorToken;\n    return _regeneratorRuntime.async(function getBudgets$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('tokenGerado'));\n\n          case 2:\n            valorToken = _context.sent;\n            axios.get('http://localhost:5000/api/budget/mybudgets/' + jwtDecode(valorToken).jti, {\n              headers: {\n                'Authorization': 'Bearer ' + valorToken\n              }\n            }).then(function (response) {\n              if (response.status === 200) {\n                setListBudgets(response.data);\n              }\n            }).catch(function (erro) {\n              return console.warn(erro);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getBudgets();\n  }, []);\n  return React.createElement(View, {\n    style: styles.orça_main\n  }, React.createElement(View, {\n    style: styles.orça_body\n  }, React.createElement(Text, {\n    style: styles.Title\n  }, \"Pr\\xE9-Or\\xE7amento \"), React.createElement(View, null, listBudgets.map(function (item) {\n    {}\n    return React.createElement(View, {\n      style: styles.car__card,\n      key: item.idBudget\n    }, React.createElement(Text, {\n      style: styles.car__cardInfo\n    }, \"         Modelo: \", item.model.nameModel, \"  \"), React.createElement(Text, {\n      style: styles.car__cardInfo\n    }, \"       Problema: \", item.service.problem, \"  \"), React.createElement(Text, {\n      style: styles.car__cardInfo\n    }, \" Valor estimado:      \", item.totalValue, \"  \"));\n  }))));\n}\nvar styles = StyleSheet.create({\n  orça_body: {\n    flex: 1\n  },\n  car__card: {\n    backgroundColor: \"#fff\",\n    borderRadius: 6,\n    minHeight: 159,\n    padding: 20,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Líder/Desktop/Mobile/04 . Mobile/Funilaria/screens/Orcamento.js"],"names":["React","useState","useEffect","axios","AsyncStorage","jwtDecode","api","Orcamento","listBudgets","setListBudgets","getBudgets","getItem","valorToken","get","jti","headers","then","response","status","data","catch","erro","console","warn","styles","orça_main","orça_body","Title","map","item","car__card","idBudget","car__cardInfo","model","nameModel","service","problem","totalValue","StyleSheet","create","flex","backgroundColor","borderRadius","minHeight","padding","marginBottom"],"mappings":";;AAAC,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACD,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP;AAGC,eAAe,SAASC,SAAT,GAAqB;AAEnC,kBAAqCN,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAMO,WAAN;AAAA,MAAmBC,cAAnB;;AAGF,WAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAE2BN,YAAY,CAACO,OAAb,CAAqB,aAArB,CAF3B;;AAAA;AAEQC,YAAAA,UAFR;AAIMT,YAAAA,KAAK,CAACU,GAAN,CAAU,gDAAgDR,SAAS,CAACO,UAAD,CAAT,CAAsBE,GAAhF,EAAqF;AACjFC,cAAAA,OAAO,EAAG;AACN,iCAAkB,YAAYH;AADxB;AADuE,aAArF,EAMCI,IAND,CAMM,UAAAC,QAAQ,EAAI;AACd,kBAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvBT,gBAAAA,cAAc,CAACQ,QAAQ,CAACE,IAAV,CAAd;AACH;AACJ,aAVD,EAYCC,KAZD,CAYO,UAACC,IAAD;AAAA,qBAAUC,OAAO,CAACC,IAAR,CAAaF,IAAb,CAAV;AAAA,aAZP;;AAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBEnB,EAAAA,SAAS,CAAC,YAAI;AAACQ,IAAAA,UAAU;AAAG,GAAnB,EAAqB,EAArB,CAAT;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEc,MAAM,CAACC;AAApB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,4BADH,EAGG,oBAAC,IAAD,QAGOnB,WAAW,CAACoB,GAAZ,CAAgB,UAACC,IAAD,EAAU;AACxB,KAA4B;AAC5B,WACE,oBAAC,IAAD;AAAO,MAAA,KAAK,EAAML,MAAM,CAACM,SAAzB;AAAyD,MAAA,GAAG,EAAED,IAAI,CAACE;AAAnE,OACA,oBAAC,IAAD;AAAO,MAAA,KAAK,EAAEP,MAAM,CAACQ;AAArB,4BAAuDH,IAAI,CAACI,KAAL,CAAWC,SAAlE,OADA,EAEA,oBAAC,IAAD;AAAO,MAAA,KAAK,EAAEV,MAAM,CAACQ;AAArB,4BAAuDH,IAAI,CAACM,OAAL,CAAaC,OAApE,OAFA,EAGA,oBAAC,IAAD;AAAO,MAAA,KAAK,EAAEZ,MAAM,CAACQ;AAArB,iCAA4DH,IAAI,CAACQ,UAAjE,OAHA,CADF;AAOD,GATD,CAHP,CAHH,CADD,CADF;AA2BC;AAAA,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAE/Bb,EAAAA,SAAS,EAAE;AACNc,IAAAA,IAAI,EAAE;AADA,GAFoB;AAM5BV,EAAAA,SAAS,EAAE;AACVW,IAAAA,eAAe,EAAE,MADP;AAEVC,IAAAA,YAAY,EAAE,CAFJ;AAGVC,IAAAA,SAAS,EAAE,GAHD;AAIVC,IAAAA,OAAO,EAAE,EAJC;AAKVC,IAAAA,YAAY,EAAE;AALJ;AANiB,CAAlB,CAAf","sourcesContent":[" import React ,{useState, useEffect}from \"react\";\r\n import {StyleSheet,Text, View, TextInput} from \"react-native\";\r\n import axios from \"axios\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport api from \"../services/api\";\r\n\r\n\r\n export default function Orcamento() {\r\n\r\n  const[listBudgets, setListBudgets] = useState([])\r\n\r\n     //BuscaOrçamento\r\nasync function getBudgets(){\r\n\r\n  const valorToken = await AsyncStorage.getItem('tokenGerado');\r\n\r\n      axios.get('http://localhost:5000/api/budget/mybudgets/' + jwtDecode(valorToken).jti, {\r\n          headers : {\r\n              'Authorization' : 'Bearer ' + valorToken\r\n          }\r\n      })\r\n\r\n      .then(response => {\r\n          if(response.status === 200){\r\n              setListBudgets(response.data)\r\n          }\r\n      })\r\n\r\n      .catch((erro) => console.warn(erro))\r\n      \r\n  }\r\n\r\n  useEffect(()=>{getBudgets()}, [])\r\n\r\n return(\r\n   <View style={styles.orça_main}>\r\n    <View style={styles.orça_body}>\r\n       <Text style={styles.Title}>Pré-Orçamento </Text>\r\n\r\n       <View>\r\n\r\n            {\r\n              listBudgets.map((item) => {\r\n                {/* itens dentro do card */}\r\n                return(\r\n                  <View  style=    {styles.car__card}                      key={item.idBudget}>\r\n                  <Text  style={styles.car__cardInfo} >         Modelo: {item.model.nameModel}  </Text>\r\n                  <Text  style={styles.car__cardInfo} >       Problema: {item.service.problem}  </Text>\r\n                  <Text  style={styles.car__cardInfo} > Valor estimado:      {item.totalValue}  </Text>\r\n                </View>\r\n                )\r\n              })\r\n            }\r\n\r\n\r\n       </View>\r\n     </View>\r\n   </View>\r\n\r\n )\r\n\r\n }const styles = StyleSheet.create({\r\n\r\n    orça_body: {\r\n         flex: 1,\r\n       \r\n       },\r\n       car__card: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: 6,\r\n        minHeight: 159,\r\n        padding: 20,\r\n        marginBottom: 20,\r\n       }\r\n })\r\n"]},"metadata":{},"sourceType":"module"}